package 栈;

public class _0_思路 {
	/*
	 *  1. 删除最外层的括号: 括号匹配有最近匹配原则, 左括号push进栈, 右括号总是和栈顶的左括号相匹配. 类似这种中间对称的比较适合使用栈
	 *  
	 *  2. 删除字符串中的所有相邻重复项: 遍历字符串的每一个字符, 并push进栈, 当新遍历到的字符 == 栈底的元素时候, 就pop出栈底的元素, 这样所有相邻的元素都会被pop出来;
	 *  
	 *  3. 用队列实现栈: 用两个队列, 先将新元素push进空队列A, 然后将保存之前元素的队列B里的每个元素pop出来并push进A队列中.
	 *  
	 *  4. 用栈实现队列: 用两个栈, 先将用来保存元素的栈A中的每个元素pop出来并push到空栈B中, 然后将新元素push进A栈中, 再将B中的每个元素pop出来并push到A中;
	 *  
	 *  5. 比较含退格的字符串: 退格字符删除的总是最后输入的元素, 符合使用栈的思维.  类似这种优先处理最近输入的元素的处理, 适合使用栈.
	 *  
	 *  6. 最小栈
	 * */
}
